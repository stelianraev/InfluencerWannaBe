@model IEnumerable<OffersListingViewModel>
@using InfluencerWannaBe.Services.Publisher
@using InfluencerWannaBe.Services.Influencers
@using InfluencerWannaBe.Services.Offers


@inject IPublisherService publishers
@inject IInfluencerService influencers
@inject IOfferService offers

<div class="row">
    @foreach (var offer in Model)
    {
        @if (!offer.IsExpired)
        {
            <div class="col-md-4">
                <div class="card mb-3" style="width: 18rem;">
                    <img class="card-img-top" src="data:image/jpeg;base64,@(Convert.ToBase64String(offer.Photo))" alt="@offer.Title @offer.PublisherUserName @offer.Payment" @offer.Country>
                    <div class="card-body text-center">
                        <h5 class="card-title text-center">@offer.Title @offer.PublisherUserName @offer.Payment @offer.Country</h5>
                        @{
                            var influencer = influencers.GetInfluencer(this.User.GetId());
                            var influencerOffer = influencers.InfluencerOfferInflIdOfferId(influencer.Id, offer.OfferId);
                            if (influencerOffer != null)
                            {
                                string result = String.Empty;
                                result = influencerOffer.AcceptedForTheOffer != true ? "Declined" : influencerOffer.AcceptedForTheOffer == true ? "Accepted" : String.Empty;

                                if (result != String.Empty)
                                {
                                    <h4>@result</h4>
                                }
                                else
                                {
                                    <h4>Waiting for approve</h4>
                                }
                            }
                        }
                        <a asp-controller="Offers" asp-action="Details" asp-route-id="@offer.OfferId" class="btn btn-primary">Details</a>
                        @{
                            var publisher = publishers.GetPublisher(offer.PublisherId);

                            if (offer.OwnerId == this.User.GetId() || User.IsAdmin())
                            {
                                <a asp-controller="Offers" asp-action="Delete" asp-route-id="@offer.OfferId" class="btn btn-primary">Delete</a>
                                <a asp-controller="Offers" asp-action="Edit" asp-route-id="@offer.OfferId" class="btn btn-primary">Edit</a>
                                <a asp-controller="Publishers" asp-action="AsignedInfluencers" asp-route-id="@offer.OfferId" class="btn btn-primary">Assigned Influencers</a>
                            }

                            // var influencer = influencers.GetInfluencer(this.User.GetId());
                            var isInfluencer = influencers.IsInfluencer(this.User.GetId());
                            var infOffer = influencers.GetInfluencerOffer(influencer);
                            var infOffers = influencers.InfluencerOffers(infOffer);

                            if (isInfluencer || User.IsAdmin())
                            {
                                if (offer.Influencers.Contains(infOffer))
                                {
                                    <a asp-controller="Offers" asp-action="Remove" asp-route-id="@offer.OfferId" class="btn btn-primary">Remove</a>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>