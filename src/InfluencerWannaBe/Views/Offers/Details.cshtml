@model OfferViewModel

@using InfluencerWannaBe.Services.Publisher
@using InfluencerWannaBe.Services.Influencers
@using InfluencerWannaBe.Services.Offers


@inject IPublisherService publishers
@inject IInfluencerService influencers
@inject IOfferService offers

<div class="row mb-5">
    <div class="card mb-3" style="width: 18rem;">
        <img class="card-img-top" src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Photo))"><img />
    </div>
    <br />
    <div class="form-gorup col-md-4">
        <h3>Username: <span class="badge badge-secondary">@Model.Title</span></h3>
        <br />
        <h3>Country: <span class="badge badge-secondary">@Model.CountryName</span></h3>
        <br />
        @if (!(String.IsNullOrEmpty(Model.Requirements) || String.IsNullOrWhiteSpace(Model.Requirements)))
        {
            <h3>Requirements: <span class="badge badge-secondary">@Model.Requirements</span></h3>
            <br />
        }
        @if (!(String.IsNullOrEmpty(Model.Description) || String.IsNullOrWhiteSpace(Model.Description)))
        {
            <h3>Description: <span class="badge badge-secondary">@Model.Description</span></h3>
            <br />
        }

        <h3>Payment: <span class="badge badge-secondary">@Model.Payment</span></h3>
        <br />

        @{
            //var isInfluencer = influencers.IsInfluencer(this.User.GetId());
            var offer = this.offers.GetOffer(Model.Id);
            var influencer = this.influencers.GetInfluencer(this.User.GetId());
            var infOffer = this.influencers.GetInfluencerOffer(influencer);
            var influencerOffers = this.influencers.InfluencerOffers(infOffer).ToList();
            var publisher = this.publishers.GetPublisher(offer.PublisherId);

            if (influencer != null && !influencerOffers.Contains(offer) && publisher.UserId != this.User.GetId())
            {
                    //<input type="button" class="btn btn-success" value="SignUp" onclick="location.href='@Url.Action("SignUp", "Offers", Model.Id)'" />
                    <a asp-controller="Offers" asp-action="SignUp" asp-route-id="@Model.Id" class="btn btn-success">SignUp</a>
                    <br />               
            }
        }
        @{
            var offers = publishers.GetPublisherOffers(publisher.Id);
        }
        <h3>Publisher</h3>
        <br />
        <h5>Username: <span class="badge badge-secondary">@publisher.Username</span></h5>
        <br />
        <h5>Offers Count: <span class="badge badge-secondary">@offers.Count()</span></h5>
        <br />
        <h5>Reviews Count: <span class="badge badge-secondary">@publisher.Reviews.Count()</span></h5>
        <br />
        <div class="nav-item">
            <a asp-controller="Publishers" asp-action="Details" asp-route-id="@publisher.Id" class="btn btn-success">Publisher profile</a>
            @if (offer.OwnerId == this.User.GetId())
            {
                <a asp-controller="Offers" asp-action="Delete" asp-route-id="@offer.Id" class="btn btn-primary">Delete</a>
                <a asp-controller="Offers" asp-action="Edit" asp-route-id="@offer.Id" class="btn btn-primary">Edit</a>
            }
        </div>
        <br />
    </div>
</div>